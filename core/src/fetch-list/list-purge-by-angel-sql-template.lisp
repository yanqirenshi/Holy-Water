(in-package :holy-water)

(defun list-purge-by-angel-sql-template (table angel &key from to)
  (select ((:as :ev_purge_end.id          :purge_id)
           (:as :ev_purge_end.angel_id    :angel_id)
           (:as :ev_purge_end.impure_id   :impure_id)
           (:as :ev_purge_end.description :purge_description)
           (:as :ev_purge_end.start       :purge_start)
           (:as :ev_purge_end.end         :purge_end)
           (:as (:- :ev_purge_end.end :ev_purge_end.start) :elapsed_time)
           (:as :rs_impure.id             :impure_id)
           (:as :rs_impure.name           :impure_name)
           (:as :rs_impure.description    :impure_description)
           (:as :rs_deamon.id             :deamon_id)
           (:as :rs_deamon.name           :deamon_name)
           (:as :rs_deamon.name_short     :deamon_name_short))
    (from :ev_purge_end)
    (inner-join (:as table :rs_impure)
                :on (:= :ev_purge_end.impure_id :rs_impure.id))
    (left-join :th_deamon_impure
               :on (:= :rs_impure.id :th_deamon_impure.impure_id))
    (left-join :rs_deamon
               :on (:= :th_deamon_impure.deamon_id :rs_deamon.id))
    (where (:and (:= :ev_purge_end.angel_id (mito:object-id angel))
                 (:or (:and (:<= :ev_purge_end.start from)
                            (:>= :ev_purge_end.end   from))
                      (:and (:>= :ev_purge_end.start from)
                            (:<  :ev_purge_end.start to)))))))

(defun list-purge-by-angel-sql (angel &key from to)
  (sxql:yield
   (union-all-queries
    (list-purge-by-angel-sql-template :rs_impure_active   angel :from from :to to)
    (list-purge-by-angel-sql-template :rs_impure_finished angel :from from :to to))))

(defun list-purge-by-angel (angel &key from to)
  (multiple-value-bind (sql vals)
      (list-purge-by-angel-sql angel :from from :to to)
    (let ((results (fetch-list sql vals)))
      (dolist (rec results)
        (timestamptz2timestamp! rec :|purge_start|)
        (timestamptz2timestamp! rec :|purge_end|)
        (interval2second!       rec :|elapsed_time|))
      results)))
